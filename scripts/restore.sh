#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è FlyTracker Bot

set -e

BACKUP_DIR="./backups"
BACKUP_DATE=${1:-latest}
TEMP_DIR="/tmp/flytracker_restore_$RANDOM"
mkdir -p "$TEMP_DIR"

if [ "$BACKUP_DATE" = "latest" ]; then
    BACKUP_DATE=$(ls -1 $BACKUP_DIR | grep redis_backup | sort | tail -n 1 | sed 's/redis_backup_\(.*\)\.rdb\.gz/\1/')
fi

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ FlyTracker Bot –∑–∞ $BACKUP_DATE"
echo "================================================"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Redis
echo "üî¥ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Redis..."
REDIS_BACKUP="$BACKUP_DIR/redis_backup_$BACKUP_DATE.rdb.gz"
if [ -f "$REDIS_BACKUP" ]; then
    # –ó–∞–ø—É—Å–∫ Redis
    docker-compose up -d redis
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redis
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redis..."
    sleep 5
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    gunzip -c "$REDIS_BACKUP" > /tmp/restore.rdb
    docker cp /tmp/restore.rdb flytracker_redis:/data/dump.rdb
    docker-compose restart redis
    rm /tmp/restore.rdb
    echo "‚úÖ Redis –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ö†Ô∏è Redis –±—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
CONFIG_BACKUP="$BACKUP_DIR/config_backup_$BACKUP_DATE.tar.gz"
if [ -f "$CONFIG_BACKUP" ]; then
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    tar -czf "config_backup_before_restore_$(date +%Y%m%d_%H%M%S).tar.gz" \
        .env docker/ scripts/ requirements.txt pyproject.toml \
        --exclude='*.log' --exclude='*.pyc' --exclude='__pycache__' 2>/dev/null || true
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    tar -xzf "$CONFIG_BACKUP" -C .
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
else
    echo "‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -rf "$TEMP_DIR"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if docker-compose exec redis redis-cli ping >/dev/null 2>&1; then
    echo "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
    KEY_COUNT=$(docker-compose exec -T redis redis-cli DBSIZE)
    echo "üîë –ö–ª—é—á–µ–π –≤ Redis: $KEY_COUNT"
else
    echo "‚ùå Redis –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if curl -f http://localhost:8000/health >/dev/null 2>&1; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "================================================"
echo "üìÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ –±—ç–∫–∞–ø–∞: $BACKUP_DATE"
echo "üïê –í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: $(date)"
echo ""
echo "üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f"
echo "   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞"
echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–µ–±—Ö—É–∫: docker-compose exec app python scripts/set_production_webhook.py"
echo ""
echo "‚ö†Ô∏è  –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
echo "   config_backup_before_restore_*.tar.gz" 